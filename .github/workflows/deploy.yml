name: WP Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

env:
  THEME_PATH: web/app/themes/xp-theme

jobs:
  checkout:
    runs-on: [self-hosted, doctorparts-host]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with: 
          submodules: 'true'

      - name: Validate composer.json and composer.lock
        run: composer validate --strict
      
      - name: Update submodules
        run: |
          git pull --recurse-submodules
          git submodule update --remote --recursive
  
  sync:
    runs-on: [self-hosted, doctorparts-host]

    steps:
      - name: Update submodules
        run: |
          git pull --recurse-submodules
          git submodule update --remote --recursive
      
      - name: Commit update
        run: |
          git config --global user.name '#x-party Bot'
          git config --global user.email 'bot@x-party.it'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Auto updated submodule references" && git push || echo "No changes to commit"

  build:
    runs-on: [self-hosted, doctorparts-host]
    needs: sync
    steps:
      - uses: actions/setup-node@v3

      - name: Cache WP Composer packages
        id: composer-wp-php-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-wp-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-wp-php-

      - name: Cache theme Composer packages
        id: composer-theme-php-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.THEME_PATH }}/vendor
          key: ${{ runner.os }}-theme-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-theme-php-
              
      - name: Cache theme Composer packages
        id: composer-theme-npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.THEME_PATH }}/node_modules
          key: ${{ runner.os }}-theme-npm-${{ hashFiles(format('{0}/**/package-lock.json', env.THEME_PATH)) }}
          restore-keys: |
            ${{ runner.os }}-theme-npm-

      - name: Install dependecies
        run: composer install --prefer-dist --no-progress
        

      - name: Install theme dependencies
        working-directory: ${{ env.THEME_PATH }}
        run: |
          composer install --prefer-dist --no-progress
          npm i 

      - name: Build theme
        working-directory: ${{ env.THEME_PATH }}
        run: npm run build

  env-setup:
    runs-on: [self-hosted, doctorparts-host]
    needs: build
    environment: production
    steps:
      - name: Reset .env file
        run: |
          touch .env
          truncate -s0 .env

      - name: Generate .env salts
        run: |
          echo "AUTH_KEY='$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 ; echo '')'" >> .env
          echo "AUTH_SALT='$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 ; echo '')'" >> .env
          echo "LOGGED_IN_KEY='$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 ; echo '')'" >> .env
          echo "LOGGED_IN_SALT='$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 ; echo '')'" >> .env
          echo "NONCE_KEY='$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 ; echo '')'" >> .env
          echo "NONCE_SALT='$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 ; echo '')'" >> .env
          echo "SECURE_AUTH_KEY='$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 ; echo '')'" >> .env
          echo "SECURE_AUTH_SALT='$(tr -dc A-Za-z0-9 </dev/urandom | head -c 64 ; echo '')'" >> .env
      
      - name: Sync .env file
        run: |
          echo "DB_HOST='${{ secrets.DB_HOST }}'" >> .env
          echo "DB_NAME='${{ secrets.DB_NAME }}'" >> .env
          echo "DB_PASSWORD='${{ secrets.DB_PASSWORD }}'" >> .env
          echo "DB_USER='${{ secrets.DB_USER }}'" >> .env
          echo "ACORN_ENABLE_EXPIRIMENTAL_ROUTER='${{ vars.ACORN_ENABLE_EXPIRIMENTAL_ROUTER }}'" >> .env
          echo "DB_PREFIX='${{ vars.DB_PREFIX }}'" >> .env
          echo "WP_ENV='${{ vars.WP_ENV }}'" >> .env
          echo "WP_HOME='${{ vars.WP_HOME }}'" >> .env
          echo "WP_SITEURL='${{ vars.WP_SITEURL }}'" >> .env

      - name: Sync permissions
        run: |
          sudo chmod 774 -R .
          sudo chown :www-data -R .